<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Loïc Chagnoleau</title>
    
    
    
    <link>https://loic-chagnoleau.com/post/</link>
    <description>Recent content in Posts on Loïc Chagnoleau</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <lastBuildDate>Sat, 06 Feb 2021 19:27:42 +0100</lastBuildDate>
    
	<atom:link href="https://loic-chagnoleau.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Drone software from scratch 1/x</title>
      <link>https://loic-chagnoleau.com/posts/drone1/</link>
      <pubDate>Sat, 06 Feb 2021 19:27:42 +0100</pubDate>
      
      <guid>https://loic-chagnoleau.com/posts/drone1/</guid>
      <description>
        
          
          
          
        
        
        
          Cela fait quelques temps que j&amp;rsquo;ai envie de me lancer ce défi. Je suis fan de drone et je m&amp;rsquo;en suis déjà fabriqué deux. Ils tournent avec Betaflight, un fork de Cleanflight. Il doit s&amp;rsquo;agir je pense des logiciels libre pour drone les plus utilisés. Le projet consiste à de recoder from scratch un logiciel embarqué pour un de mes drone. Je ne ferai jamais aussi bien qu&amp;rsquo;eux mais l&amp;rsquo;idée est plutôt de vous montrer comment on peut réaliser un projet ambitieux depuis zéro.
          
        
        </description>
    </item>
    
    <item>
      <title>FreeRTOS from scratch sur STM32F446 Partie 2/2</title>
      <link>https://loic-chagnoleau.com/posts/freertos2/</link>
      <pubDate>Sun, 31 Jan 2021 12:15:00 +0100</pubDate>
      
      <guid>https://loic-chagnoleau.com/posts/freertos2/</guid>
      <description>
        
          
          
          
        
        
        
          On s&amp;rsquo;attaque aujourd&amp;rsquo;hui à la deuxième partie de l&amp;rsquo;article à savoir, l&amp;rsquo;intégration dans notre projet d&amp;rsquo;un système d&amp;rsquo;exploitation temps réel : FreeRTOS.
Qu&amp;rsquo;est ce qu&amp;rsquo;un OS temps réel ? Dans les systèmes embarqués, il y a des cas ou l&amp;rsquo;on est contraint de respecter des temps d’exécutions donnés. Pennons l&amp;rsquo;exemple du système Airbag dans l&amp;rsquo;automobile. Il est primordial lors d&amp;rsquo;un choc frontal que l&amp;rsquo;Airbag se déclenche en x ms. ni plus, ni moins.
          
        
        </description>
    </item>
    
    <item>
      <title>FreeRTOS from scratch sur STM32F446 Partie 1/2</title>
      <link>https://loic-chagnoleau.com/posts/freertos1/</link>
      <pubDate>Sat, 23 Jan 2021 19:18:00 +0100</pubDate>
      
      <guid>https://loic-chagnoleau.com/posts/freertos1/</guid>
      <description>
        
          
          
          
        
        
        
          Introduction Je vais vous montrer au travers de ces 2 articles comment créer un projet FreeRTOS from scratch et comment le flasher dans une Nucleo. On y verra notamment quels outils/logiciels sont nécessaire, comment démarrer simplement sur Nucleo, utiliser les outils de débogages et pour finir, comment intégrer FreeRTOS à nos projets et à quoi ça sert.
Dans le premier article, on créera notre projet from scratch. Ce sera dans le second article que nous y intégrerons FreeRTOS.
          
        
        </description>
    </item>
    
    <item>
      <title>FreeRTOS : configASSERT( xTaskToNotify )</title>
      <link>https://loic-chagnoleau.com/posts/configassert/</link>
      <pubDate>Sun, 17 Jan 2021 10:00:00 +0100</pubDate>
      
      <guid>https://loic-chagnoleau.com/posts/configassert/</guid>
      <description>
        
          
          
          
        
        
        
          FreeRTOS : configASSERT( xTaskToNotify ) En développant mon application utilisant le superbe FreeRTOS, j&amp;rsquo;ai eu la surprise de tomber dans un assert après avoir activé le système de debug SEGGER SystemView. Mais cela peut aussi arriver si les fréquences d&amp;rsquo;horloge du CPU sont trop faible.
Comprendre le problème Lorsque l&amp;rsquo;on active le SEGGER SystemView avec une fréquence d&amp;rsquo;horloge du CPU trop faible, nous tombons dans un assert.
Cette assert est déclenchée car une tache est notifiée à partir d&amp;rsquo;une interruption mais cette tâche à un id de 0.
          
        
        </description>
    </item>
    
    <item>
      <title>Hello Friend</title>
      <link>https://loic-chagnoleau.com/post/hello/</link>
      <pubDate>Wed, 17 Sep 1986 00:00:00 +0000</pubDate>
      
      <guid>https://loic-chagnoleau.com/post/hello/</guid>
      <description>
        
          &lt;img src=&#34;https://loic-chagnoleau.com/img/hello.jpg&#34;/&gt;
          
        
        
        
          &#34;Hello, friend?&#34; That&#39;s lame. Maybe I should give you a name?
          
        
        </description>
    </item>
    
  </channel>
</rss>